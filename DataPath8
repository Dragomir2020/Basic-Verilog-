module DataPath

#(parameter dpwidth = 13, countwidth = 5)

(

            output zero, output [dpwidth-1:0] dpresult,

            input load_regs, add_regs, shift_regs, decr_c, clock, input [4:0] N // Nth Fibo number

);

always@(pos_edge clock)

begin

            //Load register loads initial variables

if(load_regs) begin R1 <= 1; R2 <= 1; zero = 0; end

if(add_regs) temp = R1 + R2;

if(shift_regs) R1 <= R2; R2 <= temp;

if(decr_c) N <= N â€“ 1;

if(N ==0) zero = 0; dpresult = temp;

end

//Use 10 to 15 lines of Verilog code to model the data path of the Fibonacci number generator. Use as much behavioral modeling as possible to save your efforts.

endmodule

